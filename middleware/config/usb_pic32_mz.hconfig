menu "USB Library"

config USE_USB_STACK_NEEDED
    bool

config DRV_USB_DEVICE_SUPPORT_NEEDED
    bool

config DRV_USB_HOST_SUPPORT_NEEDED
    bool

config USB_DEVICE_USE_HID_NEEDED
    bool

config USB_DEVICE_USE_CDC_NEEDED
    bool

config USB_DEVICE_USE_MSD_NEEDED
    bool

config USB_DEVICE_MSD_DISK_IMAGE_FILE_NEEDED
    bool

config USB_DEVICE_USE_AUDIO_NEEDED
    bool

config USB_DEVICE_USE_AUDIO_2_0_NEEDED
    bool

config USE_USB_STACK
    bool "Use USB Stack?"
    default n if !USE_USB_STACK_NEEDED
    default y if USE_USB_STACK_NEEDED
	select DRIVER
    select USE_SYS_INT_NEEDED
    select USE_SYS_TMR_NEEDED if PIC32MZ
    select USE_DRV_TMR_NEEDED if PIC32MZ
    ---help---
    IDH_HTML_USB_Library_Help
    ---endhelp---

menu "RTOS Configuration"
    depends on USE_USB_STACK
    depends on USE_3RDPARTY_RTOS

config USB_RTOS
    string "Run Library Tasks As"
    range 3RDPARTY_RTOS_SYS_TASKS_OPTIONS
    default "Standalone"

config USB_RTOS_TASK_SIZE
    int "Task Size"
    depends on USB_RTOS = "Standalone"
    default 1024

config USB_RTOS_TASK_PRIORITY
    int "Task Priority"
    depends on USB_RTOS = "Standalone"
    default 1

config USB_RTOS_USE_DELAY
    bool "Use Task Delay?"
    depends on USB_RTOS = "Standalone"
    default y

config USB_RTOS_DELAY
    int "Task Delay"
    depends on USB_RTOS = "Standalone"
    depends on USB_RTOS_USE_DELAY
    default 1000
endmenu

config DRV_USB_DRIVER_MODE
    string
    depends on USE_USB_STACK && (PIC32MX || PIC32MK || PIC32WK)
    range DRV_USB_MODE
    default "DYNAMIC"
    ---help---
	IDH_HTML_USB_Driver_Library
    ---endhelp---
	
config DRV_USB_INTERRUPT_MODE
    bool "Interrupt Mode"
    depends on USE_USB_STACK
    default y
    ---help---
    IDH_HTML_USB_Driver_Library
    ---endhelp---
        
config DRV_USB_INTERRUPT_VECTOR_IDX0
    string
    depends on DRV_USB_INTERRUPT_MODE
    range INT_VECTOR
    default "INT_VECTOR_USB1" if (PIC32MX || PIC32MK || PIC32WK || PIC32MZ)
    default "(IRQn_Type) ID_USBHS" if DSTBDPIC32CZ
    ---help---
    Interrupt vector for this USB Peripheral
    ---endhelp---

config DRV_USB_ISR_VECTOR_IDX0
    string
    depends on DRV_USB_INTERRUPT_MODE
    default "_USB_1_VECTOR" if DRV_USB_INTERRUPT_VECTOR_IDX0 = "INT_VECTOR_USB1" && (PIC32MX || PIC32MK)
    default "_USB_VECTOR"  if DRV_USB_INTERRUPT_VECTOR_IDX0 = "INT_VECTOR_USB1" && (PIC32MZ || PIC32WK)

config DRV_USB_INTERRUPT_PRIORITY_IDX0
    string "USB Interrupt Priority"
    depends on DRV_USB_INTERRUPT_MODE
    range INT_PRIORITY_LEVEL
    default "INT_PRIORITY_LEVEL4" 
    ---help---
    IDH_HTML_INT_PRIORITY_LEVEL
    ---endhelp---

config DRV_USB_INTERRUPT_SUB_PRIORITY_IDX0
    string "USB Interrupt Sub-priority"
    depends on DRV_USB_INTERRUPT_MODE
    range INT_SUBPRIORITY_LEVEL
    default "INT_SUBPRIORITY_LEVEL0"
    ---help---
    IDH_HTML_INT_SUBPRIORITY_LEVEL
    ---endhelp---

config DRV_USB_INT_PRIO_NUM_IDX0
    string
    depends on DRV_USB_INTERRUPT_MODE
    default "0" if DRV_USB_INTERRUPT_PRIORITY_IDX0 = "INT_DISABLE_INTERRUPT"
    default "1" if DRV_USB_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL1"
    default "2" if DRV_USB_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL2"
    default "3" if DRV_USB_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL3"
    default "4" if DRV_USB_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL4"
    default "5" if DRV_USB_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL5"
    default "6" if DRV_USB_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL6"
    default "7" if DRV_USB_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL7"

    
config DRV_USBDMA_INTERRUPT_VECTOR_IDX0
        string
        depends on DRV_USB_INTERRUPT_MODE
        range INT_VECTOR
        default "INT_VECTOR_USB1_DMA"
        ---help---
        Interrupt vector for this USB DMA Peripheral
        ---endhelp---
        
config DRV_USBDMA_ISR_VECTOR_IDX0
    string
    depends on DRV_USB_INTERRUPT_MODE
    default "_USB_DMA_VECTOR" if DRV_USBDMA_INTERRUPT_VECTOR_IDX0 = "INT_VECTOR_USB1_DMA"
    
config DRV_USBDMA_INTERRUPT_PRIORITY_IDX0
    string "USB DMA Interrupt Priority" 
    depends on DRV_USB_INTERRUPT_MODE
    range INT_PRIORITY_LEVEL
    default "INT_PRIORITY_LEVEL4"
    ---help---
    IDH_HTML_INT_PRIORITY_LEVEL
    ---endhelp---

config DRV_USBDMA_INTERRUPT_SUB_PRIORITY_IDX0
    string "USB DMA Interrupt Sub-priority" 
    depends on DRV_USB_INTERRUPT_MODE
    range INT_SUBPRIORITY_LEVEL
    default "INT_SUBPRIORITY_LEVEL0"
    ---help---
    IDH_HTML_INT_SUBPRIORITY_LEVEL
    ---endhelp---

config DRV_USBDMA_INT_PRIO_NUM_IDX0
    string
    depends on DRV_USB_INTERRUPT_MODE
    default "0" if DRV_USBDMA_INTERRUPT_PRIORITY_IDX0 = "INT_DISABLE_INTERRUPT"
    default "1" if DRV_USBDMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL1"
    default "2" if DRV_USBDMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL2"
    default "3" if DRV_USBDMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL3"
    default "4" if DRV_USBDMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL4"
    default "5" if DRV_USBDMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL5"
    default "6" if DRV_USBDMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL6"
    default "7" if DRV_USBDMA_INTERRUPT_PRIORITY_IDX0 = "INT_PRIORITY_LEVEL7"

config USB_DEVICE_SPEED_HS_IDX0
    string "USB Speed"
    depends on USE_USB_STACK 
    range USB_DEVICE_SPEED_HS
    default "USB_SPEED_HIGH"
    ---help---
    IDH_HTML_USB_DEVICE_INIT
    ---endhelp---
    
config USB_DEVICE_POWER_STATE_IDX0
    depends on USE_USB_STACK 
    string "Power State"
    range SYS_MODULE_POWER_STATE
    default "SYS_MODULE_POWER_RUN_FULL"
    ---help---
    IDH_HTML_SYS_MODULE_INIT
    ---endhelp---
    
config USB_DEVICE_SLEEP_IN_IDLE_IDX0
    bool
    depends on USE_USB_STACK
    default n
    ---help---
    Select this to stop the USB peripheral when the CPU enters IDLE mode.
    ---endhelp---
        
config USB_DEVICE_SUSPEND_IN_SLEEP_IDX0
    bool "Suspend in Sleep"
    depends on USE_USB_STACK
    default n
    ---help---
    Select this to automatically suspend the USB peripheral when the PIC32
    device enter Sleep mode.
    ---endhelp---
	
config DRV_USB_DEVICE_SUPPORT
    bool "USB Device"
    depends on USE_USB_STACK
    default y if DRV_USB_DEVICE_SUPPORT_NEEDED
    ---help---
    IDH_HTML_USB_Device_Library
    ---endhelp---
	
config DRV_USB_ENDPOINTS_NUMBER
    int "Number of Endpoints Used"
	depends on DRV_USB_DEVICE_SUPPORT
    default 3 if SYS_CONSOLE_IDX0_USE_USB || SYS_CONSOLE_IDX1_USE_USB
    default 1
    ---help---
    IDH_HTML_USB_DEVLAYER_Library_Configuration 
    ---endhelp---

	
	
config USB_DEVICE_EP0_BUFFER_SIZE
    string "Endpoint 0 Buffer Size"
    depends on DRV_USB_DEVICE_SUPPORT
    range USB_DEVICE_EP0_SIZE
    default "64"
    ---help---
    IDH_HTML_USB_DEVICE_EP0_BUFFER_SIZE
    ---endhelp---

config USB_DEVICE_INSTANCES_NUMBER
    int 
    depends on DRV_USB_DEVICE_SUPPORT
    default 1
    ---help---
    IDH_HTML_USB_DEVICE_INSTANCES_NUMBER
    ---endhelp---

source "$HARMONY_VERSION_PATH/framework/usb/config/usb_device_idx.ftl" 1 instances

config USB_DEVICE_USE_VENDOR_NEEDED
    depends on DRV_USB_DEVICE_SUPPORT
    bool
    
config USB_DEVICE_USE_ENDPOINT_FUNCTIONS
    bool
    depends on DRV_USB_DEVICE_SUPPORT
    default n if !USB_DEVICE_USE_VENDOR_NEEDED
    default y if USB_DEVICE_USE_VENDOR_NEEDED
    ---help---
    Select this if USB Device Layer Endpoint Management and data transfer
    routines are required to be added to the project. This is required if a Vendor
    USB Device is to be implemented.
    ---endhelp---

config USB_DEVICE_SOF_EVENT_ENABLE
    bool "Enable SOF Events"
    depends on DRV_USB_DEVICE_SUPPORT
    default n
    ---help---
    IDH_HTML_USB_DEVICE_SOF_EVENT_ENABLE
    ---endhelp---

config USB_DEVICE_SET_DESCRIPTOR_EVENT_ENABLE
    bool "Enable Set Descriptor Events"
    depends on DRV_USB_DEVICE_SUPPORT
    default n
    ---help---
    IDH_HTML_USB_DEVICE_SET_DESCRIPTOR_EVENT_ENABLE
    ---endhelp---

config USB_DEVICE_SYNCH_FRAME_EVENT_ENABLE
    bool "Enable Synch Frame Events"
    depends on DRV_USB_DEVICE_SUPPORT
    default n
    ---help---
    IDH_HTML_USB_DEVICE_SYNCH_FRAME_EVENT_ENABLE
    ---endhelp---

config USB_DEVICE_REMOTE_WAKEUP
    bool "Use Auto Timed Remote Wake up Functions"
    depends on DRV_USB_DEVICE_SUPPORT
    default n
	select USE_SYS_TMR_NEEDED
    ---help---
    IDH_HTML_USB_DEVICE_RemoteWakeupStart_USB_DEVICE_HANDLE   
    ---endhelp---
    
config USB_DEVICE_BOS_DESCRIPTOR_SUPPORT
    bool "Enable BOS Descriptor Support"
    depends on DRV_USB_DEVICE_SUPPORT
    default n
    ---help---
    ---endhelp---


        
config USB_DEVICE_STRING_DESCRIPTOR_TABLE_ADVANCED
    bool "Enable advanced String Descriptor Table"
    depends on DRV_USB_DEVICE_SUPPORT
    default n
    ---help---
    ---endhelp---
	
config USB_DEVICE_MICROSOFT_OS_DESCRIPTOR_SUPPORT_ENABLE
    bool "Enable Microsoft OS Descriptor Support"
    depends on DRV_USB_DEVICE_SUPPORT
	depends on USB_DEVICE_STRING_DESCRIPTOR_TABLE_ADVANCED
    default y
    ---help---
    ---endhelp---
    
config USB_DEVICE_USE_CDC
    bool 
    depends on DRV_USB_DEVICE_SUPPORT
    default n if !USB_DEVICE_USE_CDC_NEEDED
    default y if USB_DEVICE_USE_CDC_NEEDED
    ---help---
    Select this to include the Communications Device Class (CDC) Function Driver
    Library in the project.  This is required to implement a CDC USB Device
    (typically virtual COM port USB devices)
    ---endhelp---

config USB_DEVICE_USE_HID
    bool 
    depends on DRV_USB_DEVICE_SUPPORT
    default n if !USB_DEVICE_USE_HID_NEEDED
    default y if USB_DEVICE_USE_HID_NEEDED
    ---help---
    Select this to include the Human Inteface Device (HID) Function Driver
    Library in the project.  This is required to implement a HID USB Device.
    ---endhelp---


config USB_DEVICE_USE_MSD
    bool
    depends on DRV_USB_DEVICE_SUPPORT
    default n if !USB_DEVICE_USE_MSD_NEEDED
    default y if USB_DEVICE_USE_MSD_NEEDED
    ---help---
    Select this to include the Mass Storage Device (MSD) Function Driver
    Library in the project.  This is required to implement a MSD USB Device.
    ---endhelp---
    
config USB_DEVICE_MSD_DISK_IMAGE_FILE_ADD
    bool 
    depends on DRV_USB_DEVICE_SUPPORT
    default n if !USB_DEVICE_MSD_DISK_IMAGE_FILE_NEEDED
    default y if USB_DEVICE_MSD_DISK_IMAGE_FILE_NEEDED
    ---help---
    Select this to include the Mass Storage Device (MSD) Function Driver
    Library in the project.  This is required to implement a MSD USB Device.
    ---endhelp---

config USB_DEVICE_USE_AUDIO
    bool 
    depends on DRV_USB_DEVICE_SUPPORT
    default n if !USB_DEVICE_USE_AUDIO_NEEDED
    default y if USB_DEVICE_USE_AUDIO_NEEDED
    ---help---
    Select this to include the Audio Function Driver Library in the project.
    This is required to implement an Audio USB Device.
    ---endhelp---
	
config USB_DEVICE_USE_AUDIO_2_0
    bool 
    depends on DRV_USB_DEVICE_SUPPORT
    default n if !USB_DEVICE_USE_AUDIO_2_0_NEEDED
    default y if USB_DEVICE_USE_AUDIO_2_0_NEEDED
    ---help---
    Select this to include the Audio Function Driver Library in the project.
    This is required to implement an Audio USB Device.
    ---endhelp---
	
config DRV_USB_HOST_SUPPORT
    bool "USB Host"
    depends on USE_USB_STACK
    default y if DRV_USB_HOST_SUPPORT_NEEDED
    select USE_SYS_TMR_NEEDED
    ---help---
    Selecting this will include the latest version of Harmony USB Host stack into the project.
    ---endhelp---
	
		
config USB_HOST_DEVICE_NUMBER
    int "Number of Devices"
    depends on DRV_USB_HOST_SUPPORT
    default 1
	---help---
	
	---endhelp---
	
	config USB_HOST_TPL_ENTRY_NUMBER
    int "Number of TPL Entries"
    depends on DRV_USB_HOST_SUPPORT
    default 1
	---help---
	
	---endhelp---
	
	config USB_HOST_MAX_INTERFACES
    int "Host Max Interface per Device "
    depends on DRV_USB_HOST_SUPPORT
    default 5
    ---help---
    Enter the maximum number of interfaces to be supported per device
    ---endhelp---

enum USB_HOST_DRIVER
     "USB_HOST_MSD"
     ||"USB_HOST_CDC"
	 ||"USB_HOST_HID"
     ||"USB_HOST_AUDIO"
	 ||"USB_HOST_HUB"


config USB_HOST_USE_HUB
    bool " Use HUB Host Client Driver"
    depends on DRV_USB_HOST_SUPPORT
    default y  if USB_HOST_DEVICE_NUMBER != 1 
	 
    ---help---
    Selecting this will include HUB Class Driver Libary into the project.
    ---endhelp---
	
	config USB_HOST_HUB_NUMBER_OF_INSTANCES
    int "Number of HUB Host Driver Instances"
    depends on DRV_USB_HOST_SUPPORT
    depends on USB_HOST_USE_HUB
    default 1
    ---help---
    Enter the number of HUB Class Driver instances required in the application.
    ---endhelp---
	
	
	
config USB_HOST_USE_CDC
    bool " Use CDC Host Client Driver "
    depends on DRV_USB_HOST_SUPPORT
    default n
    ---help---
    Selecting this will include CDC Class Driver Libary into the project.
    ---endhelp---
	


config USB_HOST_CDC_NUMBER_OF_INSTANCES
    int "Number of CDC Host Driver Instances"
    depends on DRV_USB_HOST_SUPPORT
    depends on USB_HOST_USE_CDC
    default 1
    ---help---
    Enter the number of CDC Class Driver instances required in the application.
    ---endhelp---

config USB_HOST_CDC_ATTACH_LISTENERS_NUMBER
    int "Number of CDC Host Attach Listeners"
    depends on DRV_USB_HOST_SUPPORT
    depends on USB_HOST_USE_CDC
    default 1
    ---help---
    Enter the number of CDC Class Driver instances required in the application.
    ---endhelp---

config USB_HOST_USE_HID
    bool " Use HID Host Client Driver "
    depends on DRV_USB_HOST_SUPPORT
    default n
    ---help---
    Selecting this will include HID Client Driver Library into the project.
    ---endhelp---
	
config USB_HOST_USE_MOUSE
    bool " Use HID Host Mouse Driver "
    depends on USB_HOST_USE_HID
    default n
    ---help---
    Selecting this will include HID Host Mouse Usage Driver into the project.
    ---endhelp---
	
config USB_HOST_USE_KEYBOARD
    bool " Use HID Host Keyboard Driver "
    depends on USB_HOST_USE_HID
    default n
    ---help---
    Selecting this will include HID Host Keyboard Usage Driver into the project.
    ---endhelp---


config USB_HOST_HID_NUMBER_OF_INSTANCES
    int "Number of HID Host Driver Instances"
    depends on DRV_USB_HOST_SUPPORT
    depends on USB_HOST_USE_HID
    default 1
    ---help---
    Enter the number of HID Client Driver instances required in the application.
    ---endhelp---
	
	config USB_HOST_HID_INTERRUPT_IN_ENDPOINTS_NUMBER
    int "Number of INTERRUPT IN endpoints supported per HID interface"
    depends on DRV_USB_HOST_SUPPORT
    depends on USB_HOST_USE_HID
    default 1
    ---help---
    Enter the number of INTERRUPT IN endpoints supported per HID interface.
    ---endhelp---
	
	config USB_HID_TOTAL_USAGE_DRIVER_INSTANCES
    int "Number of total usage driver instances registered with HID client driver"
    depends on DRV_USB_HOST_SUPPORT
    depends on USB_HOST_USE_HID
    default 1
    ---help---
    Enter the number of total usage driver instances registered with HID client driver.
    ---endhelp---
	
	
	config USB_HID_GLOBAL_PUSH_POP_STACK_SIZE
    int "Number of PUSH items that can be saved in the Global item queue per field per HID interface"
    depends on DRV_USB_HOST_SUPPORT
    depends on USB_HOST_USE_HID
    default 1
    ---help---
    Enter the number of PUSH items that can be saved in the Global item queue per field per HID interface.
    ---endhelp---
	
	config USB_HOST_HID_MOUSE_BUTTONS_NUMBER
    int "Number of Mouse buttons whose value will be captured per HID Mouse device"
    depends on DRV_USB_HOST_SUPPORT
    depends on USB_HOST_USE_HID
	depends on USB_HOST_USE_MOUSE
    default 5
    ---help---
    Enter the number of Mouse buttons whose value will be captured per HID Mouse device .
    ---endhelp---
	
	config USB_HOST_USE_AUDIO
    bool " Use Audio v1.0 Host Client Driver "
    depends on DRV_USB_HOST_SUPPORT
    default n
    ---help---
    Selecting this will include AUDIO Class Driver Library into the project.
    ---endhelp---
	
	config USB_HOST_AUDIO_NUMBER_OF_INSTANCES
    int "Number of Audio v1.0 Host Driver Instances"
    depends on USB_HOST_USE_AUDIO
    default 1
    ---help---
    Enter the number of AUDIO Class Driver instances required in the application.
    ---endhelp---
	
	config USB_HOST_AUDIO_NUMBER_OF_STREAMING_INTERFACES
    int "Number of Audio v1.0 Streaming Interfaces"
    depends on USB_HOST_USE_AUDIO
    default 1
    ---help---
    Enter the number of AUDIO streaming interfaces required in the application.
    ---endhelp---
    
    config USB_HOST_AUDIO_NUMBER_OF_STREAMING_INTERFACE_SETTINGS
    int "Number of Audio v1.0 Streaming Interface Alternate Settings"
    depends on USB_HOST_USE_AUDIO
    default 1
    ---help---
    Enter the number of AUDIO streaming interface alternate settings (Excluding Alternate Setting 0) required in the application.
    ---endhelp---
    
    config USB_HOST_AUDIO_NUMBER_OF_SAMPLING_FREQUENCIES
    int "Number of Audio v1.0 Sampling Frequencies supported"
    depends on USB_HOST_USE_AUDIO
    default 5
    ---help---
    Enter the number of discrete Sampling frequencies supported by streaming interface alternate settings. 
    ---endhelp---

config USB_HOST_USE_MSD
    bool " Use MSD Host Client Driver"
    depends on USE_USB_STACK
    depends on DRV_USB_HOST_SUPPORT
    default n
    ---help---
    Selecting this will include MSD Class Driver Libary into the project.
    ---endhelp---

config USB_HOST_MSD_SELECT_FS
		bool
    depends on USE_USB_STACK
        depends on DRV_USB_HOST_SUPPORT
		depends on USB_HOST_USE_MSD
		select USE_SYS_FS_NEEDED
		default y 
	
config USB_HOST_MSD_NUMBER_OF_INSTANCES
    int "Number of MSD Host Driver Instances"
    depends on USB_HOST_USE_MSD
    depends on USE_USB_STACK
        depends on DRV_USB_HOST_SUPPORT
	
    default 1
    ---help---
    Enter the number of MSD Class Driver instances required in the application.
    ---endhelp---

endmenu

enum DRV_USB_MODE
    "STATIC"
    || "DYNAMIC"

enum USB_FUNCTION_DRIVER
     "AUDIO"
	 ||"AUDIO_2_0"
     ||"CDC"
     ||"HID"
     ||"MSD"
     ||"VENDOR"

enum USB_DEVICE_SPEED_FS
     "USB_SPEED_LOW"
     ||"USB_SPEED_FULL"
	 
enum USB_DEVICE_SPEED_HS
       "USB_SPEED_FULL"
     ||"USB_SPEED_HIGH"

enum USB_DEVICE_FUNCTION_SPEED_FS
     "USB_SPEED_LOW"
     ||"USB_SPEED_FULL"
	 
enum USB_DEVICE_FUNCTION_SPEED_HS
        "USB_SPEED_FULL"
     ||"USB_SPEED_HIGH"
     ||"USB_SPEED_HIGH|USB_SPEED_FULL"

enum USB_DEVICE_EP0_SIZE
       "64"
       ||"32"
       ||"16"
       ||"8"

enum USB_DEVICE_HID_TYPE
         "Mouse"
      || "Keyboard"
      || "Joystick"
      || "Other"

enum USB_DEVICE_MSD_TYPE
     "SDCARD"
     ||"NVM"
     ||"SPI_FLASH"
	  
enum USB_DEVICE_MSD_MAX_SECTORS
       "1"
       ||"2"
       ||"4"
       ||"8"

enum USB_DEVICE_PRODCUCT_ID_ENUM
          "User Defined Product ID"
        || "usb_microphone_demo"
		|| "usb_speaker_demo"
		|| "usb_headset_demo"
		|| "usb_headset_multiple_sampling_demo"
        || "mac_audio_hi_res_demo"
        || "cdc_com_port_dual_demo"
        || "cdc_com_port_single_demo"
        || "cdc_msd_basic_demo"
        || "cdc_serial_emulator_demo"
        || "cdc_serial_emulator_msd_demo"
        || "hid_basic_demo"
        || "hid_joystick_demo"
        || "hid_keyboard_demo"
        || "hid_mouse_demo"
        || "hid_msd_demo"
        || "msd_basic_demo"
        || "msd_sdcard_demo"
        || "msd_spiflash_demo"
        || "msd_multiple_luns_demo"
        || "vendor_demo"
        

ifblock USE_USB_STACK

add "<#include \"/framework/usb/templates/system_init.c.device_data.ftl\">"  to list SYSTEM_INIT_C_LIBRARY_INITIALIZATION_DATA
add "<#include \"/framework/usb/templates/system_init.c.device_calls.ftl\">"  to list SYSTEM_INIT_C_INITIALIZE_MIDDLEWARE
add "<#include \"/framework/usb/templates/usb_tasks.c.ftl\">"  to list SYSTEM_TASKS_C_CALL_LIB_TASKS
add "<#include \"/framework/usb/templates/system_config.h.common.ftl\">"  to list SYSTEM_CONFIG_H_MIDDLEWARE_CONFIGURATION 
add "<#include \"/framework/usb/templates/system_init.c.driver_data.ftl\">"  to list SYSTEM_INIT_C_DRIVER_INITIALIZATION_DATA
add "<#include \"/framework/usb/templates/system_init.c.driver_calls.ftl\">"  to list SYSTEM_INIT_C_SYS_INITIALIZE_DRIVERS

file USB_COMMON_H "$HARMONY_VERSION_PATH/framework/usb/usb_common.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_common.h"
file USB_CHAPTER_9_H "$HARMONY_VERSION_PATH/framework/usb/usb_chapter_9.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_chapter_9.h"
file USB_HUB_H "$HARMONY_VERSION_PATH/framework/usb/usb_hub.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_hub.h"
file USB_HOST_HUB_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_hub.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_hub.h"


ifblock DRV_USB_HOST_SUPPORT

add "<#include \"/framework/usb/templates/system_init.c.host_data.ftl\">"  to list SYSTEM_INIT_C_LIBRARY_INITIALIZATION_DATA
add "<#include \"/framework/usb/templates/system_init.c.host_calls.ftl\">"  to list SYSTEM_INIT_C_INITIALIZE_MIDDLEWARE

file DRV_USB_H "$HARMONY_VERSION_PATH/framework/driver/usb/drv_usb.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/drv_usb.h"
file DRV_USB_HS_C "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/dynamic/drv_usbhs.c" to "$PROJECT_SOURCE_FILES/framework/driver/usb/usbhs/src/dynamic/drv_usbhs.c" if PIC32MZ
file DRV_USB_HS_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/drv_usbhs.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/drv_usbhs.h" if PIC32MZ
file DRV_USB_HS_LOCAL_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/drv_usbhs_local.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/src/drv_usbhs_local.h" if PIC32MZ
file DRV_USB_HS_VAR_MAPPING_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/drv_usbhs_variant_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/src/drv_usbhs_variant_mapping.h" if PIC32MZ
	ifblock DRV_USB_DRIVER_MODE = "DYNAMIC"
    file DRV_USB_FS_DYNAMIC_C "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/dynamic/drv_usbfs.c" to "$PROJECT_SOURCE_FILES/framework/driver/usb/usbfs/src/dynamic/drv_usbfs.c" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_FS_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/drv_usbfs.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/drv_usbfs.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_FS_MAPPING_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/drv_usbfs_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/drv_usbfs_mapping.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_FS_LOCAL_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/drv_usbfs_local.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/src/drv_usbfs_local.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_FS_VAR_MAPPING_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/drv_usbfs_variant_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/src/drv_usbfs_variant_mapping.h" if (PIC32MX || PIC32MK || PIC32WK)
	endif 
	
endif

ifblock DRV_USB_DEVICE_SUPPORT

file DRV_USB_DEV_H "$HARMONY_VERSION_PATH/framework/driver/usb/drv_usb.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/drv_usb.h"
file USB_HOST_CLIENT_DRIVER_DEV_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_client_driver.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_client_driver.h"
file USB_HOST_DEV_H "$HARMONY_VERSION_PATH/framework/usb/usb_host.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host.h"
file USB_HOST_HUB_INTERFACE_DEV_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_hub_interface.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_hub_interface.h"
file DRV_USB_HS_DEV_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/drv_usbhs.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/drv_usbhs.h"
file DRV_USB_HS_LOCAL_DEV_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/drv_usbhs_local.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/src/drv_usbhs_local.h" if PIC32MZ
file DRV_USB_HS_VAR_MAPPING_DEV_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/drv_usbhs_variant_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/src/drv_usbhs_variant_mapping.h" if PIC32MZ
file DRV_USB_DEV_HS_C "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/dynamic/drv_usbhs.c" to "$PROJECT_SOURCE_FILES/framework/driver/usb/usbhs/src/dynamic/drv_usbhs.c" if PIC32MZ
	ifblock DRV_USB_DRIVER_MODE = "DYNAMIC"
    file DRV_USB_DEV_FS_DYNAMIC_C "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/dynamic/drv_usbfs.c" to "$PROJECT_SOURCE_FILES/framework/driver/usb/usbfs/src/dynamic/drv_usbfs.c" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_DEV_FS_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/drv_usbfs.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/drv_usbfs.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_DEV_FS_MAPPING_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/drv_usbfs_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/drv_usbfs_mapping.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_DEV_FS_LOCAL_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/drv_usbfs_local.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/src/drv_usbfs_local.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_DEV_FS_VAR_MAPPING_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/drv_usbfs_variant_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/src/drv_usbfs_variant_mapping.h" if (PIC32MX || PIC32MK || PIC32WK)
	endif 
	
endif
endif

ifblock DRV_USB_DEVICE_SUPPORT
file USB_DEVICE_H "$HARMONY_VERSION_PATH/framework/usb/usb_device.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_device.h"
file USB_DEVICE_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device.c"
file USB_DEVICE_FUNCTION_DRIVER_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_device_function_driver.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_device_function_driver.h"
file USB_BILLBOARD_H "$HARMONY_VERSION_PATH/framework/usb/usb_billboard.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_billboard.h"
file USB_DEVICE_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_device_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_device_local.h"
file USB_DEVICE_MAPPING_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_device_mapping.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_device_mapping.h"
file DRV_USB_DEVICE_HS_C "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/dynamic/drv_usbhs_device.c" to "$PROJECT_SOURCE_FILES/framework/driver/usb/usbhs/src/dynamic/drv_usbhs_device.c" if PIC32MZ
file USB_HS_DEVICE_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/drv_usbhs.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/drv_usbhs.h" if PIC32MZ
file DRV_USB_HS_LOCAL_DEVICE_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/drv_usbhs_local.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/src/drv_usbhs_local.h" if PIC32MZ
file DRV_USB_HS_VAR_MAPPING_DEVICE_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/drv_usbhs_variant_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/src/drv_usbhs_variant_mapping.h" if PIC32MZ
	ifblock DRV_USB_DRIVER_MODE = "DYNAMIC"
file DRV_USB_DEVICE_FS_DYNAMIC_C "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/dynamic/drv_usbfs_device.c" to "$PROJECT_SOURCE_FILES/framework/driver/usb/usbfs/src/dynamic/drv_usbfs_device.c" if (PIC32MX || PIC32MK || PIC32WK)

file DRV_USB_DEVICE_FS_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/drv_usbfs.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/drv_usbfs.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_DEVICE_FS_MAPPING_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/drv_usbfs_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/drv_usbfs_mapping.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_DEVICE_FS_LOCAL_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/drv_usbfs_local.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/src/drv_usbfs_local.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_DEVICE_FS_VAR_MAPPING_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/drv_usbfs_variant_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/src/drv_usbfs_variant_mapping.h" if (PIC32MX || PIC32MK || PIC32WK)
	endif 
	

    ifblock USB_DEVICE_USE_CDC
file USB_CDC_H "$HARMONY_VERSION_PATH/framework/usb/usb_cdc.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_cdc.h"
file USB_DEVICE_CDC_H "$HARMONY_VERSION_PATH/framework/usb/usb_device_cdc.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_device_cdc.h"
file USB_DEVICE_CDC_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_cdc.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_cdc.c"
file USB_DEVICE_CDC_ACM_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_cdc_acm.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_cdc_acm.c"
file USB_DEVICE_CDC_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_device_cdc_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_device_cdc_local.h"
    endif

    ifblock USB_DEVICE_USE_AUDIO
file USB_AUDIO_V1_0H "$HARMONY_VERSION_PATH/framework/usb/usb_audio_v1_0.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_audio_v1_0.h"
file USB_DEVICE_AUDIO_V1_0H "$HARMONY_VERSION_PATH/framework/usb/usb_device_audio_v1_0.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_device_audio_v1_0.h"
file USB_DEVICE_AUDIO_V1_0_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_audio_v1_0.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_audio_v1_0.c"
file USB_DEVICE_AUDIO_READ_WRITE_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_audio_read_write.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_audio_read_write.c"
file USB_DEVICE_AUDIO_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_device_audio_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_device_audio_local.h"
     endif
	 
	ifblock USB_DEVICE_USE_AUDIO_2_0
file USB_AUDIO_V2_0H "$HARMONY_VERSION_PATH/framework/usb/usb_audio_v2_0.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_audio_v2_0.h"
file USB_DEVICE_AUDIO_V2_0H "$HARMONY_VERSION_PATH/framework/usb/usb_device_audio_v2_0.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_device_audio_v2_0.h"
file USB_DEVICE_AUDIO_V2_0_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_audio_v2_0.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_audio_v2_0.c"
file USB_DEVICE_AUDIO2_READ_WRITE_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_audio_v2_read_write.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_audio_v2_read_write.c"
file USB_DEVICE_AUDIO_V2_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_device_audio_v2_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_device_audio_v2_local.h"
     endif

    ifblock USB_DEVICE_USE_HID
file USB_HID_H "$HARMONY_VERSION_PATH/framework/usb/usb_hid.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_hid.h"
file USB_DEVICE_HID_H "$HARMONY_VERSION_PATH/framework/usb/usb_device_hid.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_device_hid.h"
file USB_DEVICE_HID_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_hid.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_hid.c"
file USB_DEVICE_HID_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_device_hid_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_device_hid_local.h"
     endif

     ifblock USB_DEVICE_USE_MSD
file USB_MSD_H "$HARMONY_VERSION_PATH/framework/usb/usb_msd.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_msd.h"
file USB_DEVICE_MSD_H "$HARMONY_VERSION_PATH/framework/usb/usb_device_msd.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_device_msd.h"
file USB_DEVICE_SCSI_H "$HARMONY_VERSION_PATH/framework/usb/scsi.h" to "$PROJECT_HEADER_FILES/framework/usb/scsi.h"
file USB_DEVICE_MSD_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_msd.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_msd.c"
file USB_DEVICE_MSD_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_device_msd_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_device_msd_local.h"
        ifblock USB_DEVICE_MSD_DISK_IMAGE_FILE_ADD
            template USB_DEVICE_MSD_DISK_IMAGE_C "$HARMONY_VERSION_PATH/framework/usb/templates/diskImage.c.ftl" to "$PROJECT_SOURCE_FILES/app/diskImage.c" 
        endif
     endif

     ifblock USB_DEVICE_USE_ENDPOINT_FUNCTIONS
file USB_DEVICE_ENDPOINT_FUNCTIONS_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_endpoint_functions.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_endpoint_functions.c"
     endif

    ifblock USB_DEVICE_REMOTE_WAKEUP
file USB_DEVICE_REMOTE_WAKEUP_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_device_remote_wakeup.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_device_remote_wakeup.c"
    endif
endif

ifblock DRV_USB_HOST_SUPPORT
file USB_HOST_H "$HARMONY_VERSION_PATH/framework/usb/usb_host.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host.h"
file USB_HOST_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_local.h"
file USB_HOST_HUB_INTERFACE_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_hub_interface.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_hub_interface.h"
file USB_HOST_HUB_MAPPING_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_hub_mapping.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_hub_mapping.h"
file USB_HOST_CLIENT_DRIVER_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_client_driver.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_client_driver.h"
file USB_HOST_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host.c"
file DRV_USB_HOST_HS_C "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/dynamic/drv_usbhs_host.c" to "$PROJECT_SOURCE_FILES/framework/driver/usb/usbhs/src/dynamic/drv_usbhs_host.c" if PIC32MZ
file DRV_USBHS_HOST_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/drv_usbhs.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/drv_usbhs.h" if PIC32MZ
file DRV_USBHS_LOCAL_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/drv_usbhs_local.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/src/drv_usbhs_local.h" if PIC32MZ
file DRV_USBHS_VAR_MAPPING_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbhs/src/drv_usbhs_variant_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbhs/src/drv_usbhs_variant_mapping.h" if PIC32MZ
	ifblock DRV_USB_DRIVER_MODE = "DYNAMIC"
file DRV_USB_HOST_FS_DYNAMIC_C "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/dynamic/drv_usbfs_host.c" to "$PROJECT_SOURCE_FILES/framework/driver/usb/usbfs/src/dynamic/drv_usbfs_host.c" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_HOST_FS_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/drv_usbfs.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/drv_usbfs.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_HOST_FS_MAPPING_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/drv_usbfs_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/drv_usbfs_mapping.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_HOST_FS_LOCAL_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/drv_usbfs_local.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/src/drv_usbfs_local.h" if (PIC32MX || PIC32MK || PIC32WK)
file DRV_USB_HOST_FS_VAR_MAPPING_DYNAMIC_H "$HARMONY_VERSION_PATH/framework/driver/usb/usbfs/src/drv_usbfs_variant_mapping.h" to "$PROJECT_HEADER_FILES/framework/driver/usb/usbfs/src/drv_usbfs_variant_mapping.h" if (PIC32MX || PIC32MK || PIC32WK)
	endif 
	
	
endif

ifblock USB_HOST_USE_CDC
file USB_HOST_CDC_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_cdc.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_cdc.h"
file USB_HOST_CDC1_H "$HARMONY_VERSION_PATH/framework/usb/usb_cdc.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_cdc.h"
file USB_HOST_CDC_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host_cdc.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host_cdc.c"
file USB_HOST_CDC_ACM_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host_cdc_acm.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host_cdc_acm.c"
file USB_HOST_CDC_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_cdc_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_cdc_local.h"
file USB_HOST_CDC_ACM_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_cdc_acm.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_cdc_acm.h"
   
endif

ifblock USB_HOST_USE_HID
file USB_HOST_HID_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_hid.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_hid.h"
file USB_HOST_HID1_H "$HARMONY_VERSION_PATH/framework/usb/usb_hid.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_hid.h"
file USB_HOST_HID_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host_hid.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host_hid.c"
file USB_HOST_HID_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_hid_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_hid_local.h"

endif

ifblock USB_HOST_USE_MOUSE
file USB_HOST_HID_MOUSE_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_hid_mouse.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_hid_mouse.h"
file USB_HOST_HID_MOUSE_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host_hid_mouse.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host_hid_mouse.c"
file USB_HOST_HID_MOUSE_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_hid_mouse_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_hid_mouse_local.h"

endif

ifblock USB_HOST_USE_KEYBOARD
file USB_HOST_HID_KEYBOARD_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_hid_keyboard.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_hid_keyboard.h"
file USB_HOST_HID_KEYBOARD_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host_hid_keyboard.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host_hid_keyboard.c"
file USB_HOST_HID_KEYBOARD_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_hid_keyboard_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_hid_keyboard_local.h"

endif

ifblock USB_HOST_USE_HUB
file USB_HOST_HUB_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host_hub.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host_hub.c"
file USB_HOST_HUB_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_hub_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_hub_local.h"
   
endif

ifblock USB_HOST_USE_AUDIO
file USB_HOST_AUDIO_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_audio_v1_0.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_audio_v1_0.h"
file USB_HOST_AUDIO_V1_0_H "$HARMONY_VERSION_PATH/framework/usb/usb_audio_v1_0.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_audio_v1_0.h"
file USB_HOST_AUDIO_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host_audio_v1_0.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host_audio_v1_0.c"
file USB_HOST_AUDIO_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_audio_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_audio_local.h"
file USB_HOST_AUDIO_V1_MAPPING_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_audio_v1_mapping.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_audio_v1_mapping.h"
   
endif

ifblock USB_HOST_USE_MSD
file USB_HOST_MSD_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_msd.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_msd.h"
file USB_MSD2_H "$HARMONY_VERSION_PATH/framework/usb/usb_msd.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_msd.h"
file USB_HOST_MSD_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_msd_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_msd_local.h"
file USB_HOST_MSD_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host_msd.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host_msd.c"
file USB_HOST_SCSI_C "$HARMONY_VERSION_PATH/framework/usb/src/dynamic/usb_host_scsi.c"  to "$PROJECT_SOURCE_FILES/framework/usb/src/dynamic/usb_host_scsi.c"
file USB_SCSI_H "$HARMONY_VERSION_PATH/framework/usb/scsi.h" to "$PROJECT_HEADER_FILES/framework/usb/scsi.h"
file USB_HOST_SCSI_H "$HARMONY_VERSION_PATH/framework/usb/usb_host_scsi.h" to "$PROJECT_HEADER_FILES/framework/usb/usb_host_scsi.h"
file USB_HOST_SCSI_LOCAL_H "$HARMONY_VERSION_PATH/framework/usb/src/usb_host_scsi_local.h" to "$PROJECT_HEADER_FILES/framework/usb/src/usb_host_scsi_local.h"
   
endif





